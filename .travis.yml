jobs:
  include:
    - os: linux
      language: java
      jdk: openjdk8
    - os: osx
      osx_image: xcode11.4

addons:
  apt:
    packages:
      - ant
      - nsis
      - osslsigncode
  homebrew:
    packages:
      - ant
      - maven
      - gettext
    taps: homebrew/cask-versions
    casks: adoptopenjdk8

deploy:
  provider: releases
  api_key: "$GITHUB_UPLOAD_KEY"
  file_glob: true
  cleanup: false
  file:
    - upload/Jubler-*
  draft: true

before_install:
 - set -e ; mkdir upload
 - if [ $TRAVIS_OS_NAME = osx   ] ; then echo "1$P12_APPLE_PASS" ; echo $P12_APPLE_CONTENT | base64 --decode > apple-keysign.p12 ; echo 1 ; md5 apple-keysign.p12 ; security create-keychain -p "$P12_APPLE_PASS" build.keychain ; echo 2 ; security default-keychain -s build.keychain ; echo 3 ; security unlock-keychain -p "$P12_APPLE_PASS" build.keychain ; echo 4 ; security import apple-keysign.p12 -k build.keychain -P "$P12_APPLE_PASS" -T /usr/bin/codesign ; echo 5 ; security find-identity -v ; rm apple-keysign.p12 ; fi
 - if [ $TRAVIS_OS_NAME = linux ] ; then echo $P12_CONTENT | base64 --decode > modules/installer/secret/code-signing.p12 ; fi
 - sudo rm -rf /Library/Java/JavaVirtualMachines/*14*
 - ./resources/i18n/compile

script:
 - if [ $TRAVIS_OS_NAME = osx   ] ; then mvn clean install -Pdist-osx     && cp modules/installer/target/Jubler-*.dmg upload/ ; resources/installers/macosx/notarizing send ; fi
 - if [ $TRAVIS_OS_NAME = linux ] ; then mvn clean install -Pdist-generic && cp modules/installer/target/Jubler-*tar.bz2 upload/   ; fi
 - if [ $TRAVIS_OS_NAME = linux ] ; then mvn clean install -Pdist-linux   && cp modules/installer/target/Jubler-*.appimage upload/ ; fi
 - if [ $TRAVIS_OS_NAME = linux ] ; then mvn clean install -Pdist-windows && cp modules/installer/target/Jubler-*.exe upload/      ; fi
